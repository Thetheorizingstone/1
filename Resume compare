from flask import Flask, request, render_template, jsonify
import pdfplumber  # For reading PDF resumes
import re
import spacy  # For NLP resume parsing and skill extraction

app = Flask(__name__)

# Load your resume for comparison
YOUR_RESUME_TEXT = """
Travis Raymond-Charlie Stone's Resume: [Predefined Text]
"""

# Load Spacy NLP model
nlp = spacy.load('en_core_web_sm')

# Define keywords and criteria for each scenario
zombie_keywords = ["survival", "combat", "first aid", "firearms", "stealth"]
paleolithic_keywords = ["hunting", "toolmaking", "shelter building", "fire-making"]
future_keywords = ["AI", "machine learning", "coding", "cybersecurity"]

# Extract skills from resume using NLP
def extract_skills(resume_text):
    doc = nlp(resume_text)
    skills = [token.text for token in doc if token.pos_ == "NOUN"]  # Extract nouns as possible skills
    return skills

# Compare resume against scenario criteria
def compare_resumes(user_resume_text):
    user_skills = extract_skills(user_resume_text)

    # Calculate scores for each scenario
    zombie_score = len(set(zombie_keywords) & set(user_skills))
    paleo_score = len(set(paleolithic_keywords) & set(user_skills))
    future_score = len(set(future_keywords) & set(user_skills))

    # Compare user's resume with yours
    comparison = {
        "zombie_score": zombie_score,
        "paleolithic_score": paleo_score,
        "future_score": future_score,
        "overall": "Strong in future" if future_score > max(zombie_score, paleo_score) else "Strong in survival"
    }

    return comparison

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/compare', methods=['POST'])
def compare():
    user_resume = request.files['resume'].read().decode('utf-8')

    # Extract user resume content (you can modify to handle PDFs, etc.)
    comparison_result = compare_resumes(user_resume)

    return jsonify(comparison_result)

if __name__ == "__main__":
    app.run(debug=True)
