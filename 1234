import matplotlib.pyplot as plt
import numpy as np

def plot_comparison(your_scores, user_scores, scenario):
    labels = ['Survival', 'Combat', 'AI', 'Leadership', 'Creativity']
    your_data = [your_scores.get(l, 0) for l in labels]
    user_data = [user_scores.get(l, 0) for l in labels]

    x = np.arange(len(labels))
    width = 0.35

    fig, ax = plt.subplots()
    rects1 = ax.bar(x - width/2, your_data, width, label='Your Scores')
    rects2 = ax.bar(x + width/2, user_data, width, label='User Scores')

    ax.set_ylabel('Scores')
    ax.set_title(f'Scenario: {scenario}')
    ax.set_xticks(x)
    ax.set_xticklabels(labels)
    ax.legend()

    plt.show()def compare_resumes(user_resume_text):
    user_skills, user_roles = extract_skills_and_roles(user_resume_text)

    # Scenario 1: Zombie Apocalypse
    zombie_score = weighted_score(user_skills, zombie_criteria)

    # Scenario 2: Paleolithic Era
    paleo_score = weighted_score(user_skills, paleolithic_criteria)

    # Scenario 3: Future Era
    future_score = weighted_score(user_skills, future_criteria)

    # Add qualitative assessment: leadership, ethics, creativity
    overall_fit = assess_soft_skills(user_resume_text)

    # Personalized feedback and recommendations
    feedback = generate_recommendations(set(zombie_keywords) - set(user_skills), "zombie")
    
    # Output the comparison scores and feedback
    return {
        "zombie_apocalypse": zombie_score,
        "paleolithic_era": paleo_score,
        "future_era": future_score,
        "overall_fit": overall_fit,
        "recommendations": feedback
    }
